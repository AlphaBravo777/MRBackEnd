# Generated by Django 2.0.5 on 2019-02-25 11:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batchgroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batchname', models.CharField(db_column='batchName', max_length=100, unique=True)),
                ('ranking', models.IntegerField(unique=True)),
                ('packingListRanking', models.IntegerField(blank=True, null=True, unique=True)),
            ],
            options={
                'db_table': 'tbl_batchgroups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ColorCodes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemDescription', models.CharField(db_column='itemDescription', max_length=100)),
                ('colorCode', models.CharField(db_column='colorCode', max_length=201)),
            ],
            options={
                'db_table': 'tbl_colorcodes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DaysOfTheWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekDayNames', models.CharField(db_column='weekDayNames', max_length=100, unique=True)),
                ('weekDayNumber', models.IntegerField(db_column='weekDayNumber', unique=True)),
                ('weekDayRanking', models.IntegerField(db_column='weekDayRanking', unique=True)),
            ],
            options={
                'db_table': 'tbl_daysoftheweek',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeliveryRoutes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('routeName', models.CharField(db_column='routeName', max_length=255, unique=True)),
                ('loadingDay', models.ForeignKey(db_column='loadingDay', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.DaysOfTheWeek')),
            ],
            options={
                'db_table': 'tbl_deliveryroutes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Factoryarea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(db_column='area', max_length=255, unique=True)),
                ('areaRanking', models.IntegerField(db_column='areaRanking')),
            ],
            options={
                'db_table': 'tbl_factoryarea',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Factorysubarea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subArea', models.CharField(db_column='subArea', max_length=255, unique=True)),
                ('subAreaRanking', models.IntegerField(db_column='subAreaRanking')),
                ('area', models.ForeignKey(blank=True, db_column='area', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Factoryarea')),
            ],
            options={
                'db_table': 'tbl_factorysubarea',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageName', models.CharField(blank=True, max_length=255, null=True)),
                ('imageDescription', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tbl_image',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasuringUnits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unitAmount', models.DecimalField(db_column='unitAmount', decimal_places=3, max_digits=10)),
                ('measuringUnit', models.CharField(db_column='measuringUnit', max_length=100)),
                ('unitDescription', models.CharField(db_column='unitDescription', max_length=100)),
                ('unitColor', models.ForeignKey(blank=True, db_column='unitColor', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.ColorCodes')),
                ('unitImage', models.ForeignKey(blank=True, db_column='unitImage', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Image')),
            ],
            options={
                'db_table': 'tbl_measuringunits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packaging_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tbl_packaging',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessedStockAmounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(max_length=10)),
                ('dateCreated', models.DateTimeField(auto_now_add=True, db_column='dateCreated', null=True)),
            ],
            options={
                'db_table': 'tbl_processedstockamounts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductBrands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('brandSmallImage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tbl_productbrands',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Productcontainernames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('containername', models.CharField(blank=True, db_column='containerName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tbl_productcontainernames',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Productcontainers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleteContainerAmount', models.BooleanField(default=True)),
                ('factoryRanking', models.IntegerField(blank=True, db_column='factoryranking', null=True)),
                ('containernameid', models.ForeignKey(db_column='containernameid', on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productcontainernames')),
                ('factoryCatagory', models.ForeignKey(blank=True, db_column='factoryCatagory', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Factoryarea_factoryCatagory', to='mrDatabaseModels.Factoryarea')),
                ('factorySubArea', models.ForeignKey(blank=True, db_column='factorySubArea', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Factorysubarea')),
                ('filterCatagory', models.ForeignKey(blank=True, db_column='filterCatagory', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Factoryarea')),
                ('image', models.ForeignKey(blank=True, db_column='image', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Image')),
            ],
            options={
                'db_table': 'tbl_productcontainers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Productgroupnames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.CharField(blank=True, db_column='groupName', max_length=255, null=True)),
                ('group', models.CharField(blank=True, max_length=255, null=True)),
                ('grouprating', models.IntegerField(blank=True, db_column='groupRating', null=True)),
            ],
            options={
                'db_table': 'tbl_productgroupnames',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Productgroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupnameid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productgroupnames')),
            ],
            options={
                'db_table': 'tbl_productgroups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Productlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productid', models.CharField(db_column='productid', max_length=20, unique=True)),
                ('proddescription', models.CharField(blank=True, db_column='proddescription', max_length=255, null=True)),
                ('packageweight', models.FloatField(blank=True, db_column='packageweight', null=True)),
                ('productonhold', models.BooleanField(db_column='productonhold', default=False)),
                ('batchranking', models.IntegerField(blank=True, db_column='batchranking', null=True)),
            ],
            options={
                'db_table': 'tbl_productlist',
                'ordering': ['productid'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Shifts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shiftName', models.CharField(db_column='shiftName', max_length=100, unique=True)),
                ('shiftSuperVisor', models.ForeignKey(blank=True, db_column='shiftSuperVisor', default=23, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_shifts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StockTakingTimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times', models.CharField(max_length=255, unique=True)),
                ('selectiveDelete', models.BooleanField(db_column='selectiveDelete', default=False)),
            ],
            options={
                'db_table': 'tbl_stocktakingtimes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TimeStamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_column='year', default=2018)),
                ('week', models.IntegerField(db_column='week', default=1)),
                ('shortDate', models.DateField(db_column='shortDate', default=datetime.date.today)),
                ('dateCreated', models.DateTimeField(auto_now_add=True, db_column='dateCreated', null=True)),
                ('shift', models.ForeignKey(db_column='shift', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Shifts')),
                ('time', models.ForeignKey(db_column='time', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.StockTakingTimes')),
                ('weekDay', models.ForeignKey(db_column='weekDay', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.DaysOfTheWeek')),
            ],
            options={
                'db_table': 'tbl_timestamp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HighRiskPackingList',
            fields=[
                ('productCode', models.OneToOneField(db_column='productCode', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mrDatabaseModels.Productlist')),
                ('currentStock', models.IntegerField(db_column='currentStock')),
                ('stockNeeded', models.IntegerField(db_column='stockNeeded')),
                ('user', models.ForeignKey(default=23, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_highriskpackinglist',
                'ordering': ['productCode'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='productlist',
            name='batchgroup',
            field=models.ForeignKey(db_column='batchgroup', on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Batchgroups'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='brand',
            field=models.ForeignKey(blank=True, db_column='brand', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.ProductBrands'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='brandImage',
            field=models.ForeignKey(blank=True, db_column='brandImage', default=19, null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Image'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='packaging',
            field=models.ForeignKey(blank=True, db_column='packaging', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Packaging'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='packlistgroup',
            field=models.ForeignKey(db_column='packlistgroup', default=20, on_delete=django.db.models.deletion.CASCADE, related_name='packlistgroup', to='mrDatabaseModels.Batchgroups'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='stocktakegroup',
            field=models.ForeignKey(db_column='stocktakegroup', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stocktakegroup', to='mrDatabaseModels.Batchgroups'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='unitweight',
            field=models.ForeignKey(blank=True, db_column='unitweight', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.MeasuringUnits'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='user',
            field=models.ForeignKey(db_column='user', default=23, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productgroups',
            name='productid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productlist'),
        ),
        migrations.AddField(
            model_name='productgroupnames',
            name='members',
            field=models.ManyToManyField(through='mrDatabaseModels.Productgroups', to='mrDatabaseModels.Productlist'),
        ),
        migrations.AddField(
            model_name='productcontainers',
            name='productid',
            field=models.ForeignKey(db_column='productid', on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productlist'),
        ),
        migrations.AddField(
            model_name='productcontainernames',
            name='members',
            field=models.ManyToManyField(through='mrDatabaseModels.Productcontainers', to='mrDatabaseModels.Productlist'),
        ),
        migrations.AddField(
            model_name='processedstockamounts',
            name='container',
            field=models.ForeignKey(db_column='container', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productcontainernames'),
        ),
        migrations.AddField(
            model_name='processedstockamounts',
            name='prodContainer',
            field=models.ForeignKey(db_column='prodContainer', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productcontainers'),
        ),
        migrations.AddField(
            model_name='processedstockamounts',
            name='prodName',
            field=models.ForeignKey(db_column='prodName', on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.Productlist'),
        ),
        migrations.AddField(
            model_name='processedstockamounts',
            name='time',
            field=models.ForeignKey(db_column='time', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.StockTakingTimes'),
        ),
        migrations.AddField(
            model_name='processedstockamounts',
            name='timeStampID',
            field=models.ForeignKey(db_column='timeStampID', default=1, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.TimeStamp'),
        ),
        migrations.AddField(
            model_name='processedstockamounts',
            name='user',
            field=models.ForeignKey(db_column='user', default=23, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batchgroups',
            name='batchColor',
            field=models.ForeignKey(blank=True, db_column='batchColor', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrDatabaseModels.ColorCodes'),
        ),
    ]
